What happens when you initialize a repository? Why do you need to do it?
- tells git to recognize working dir as a git repo.
- allows begin tracking

How is the staging area different from the working directory and the repository?
What value do you think it offers?
- allows selection of which files to commit to repo and putting commit messages

How can you use the staging area to make sure you have one commit per logical
change?
- commit message

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
- branch for little bug fix or explore enhancement without destroy existing
working code base

How do the diagrams help you visualize the branch structure?
- helps understand each branch and the history of commits on the branch
- explains how branches divert from each other
- shows any unreachable commits 

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
- allows consolidation of the separate branches and therefore bring together
separate work that was in a branch to the master. 
- diagram shows how 2 branches come together and the parent that contributed
makes it easier to see the history 

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges
manually?
pro:
- faster to automatically merge instead of asking human to intervene
- computer is better at detecting changes
- no risk of introducing human error when merging
cons:
- git not smart enough to decide what to keep and what to discard when merging
